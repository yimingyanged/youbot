/**
\mainpage
\htmlinclude manifest.html

\b geometric_verification 

<!-- 
The geometric verification node listens for matches in appearance space generated by the place recognition node.  It provides the crucial mechanism of confirming whether matches generated in appearance space are physically realizable.  Unlike other nodes in our system this one operates asyncronously since image recognition may, or may not, generate any matches for a given input image.

The node subscribes to <<MsgLink(cyphy_vslam_msgs/Match)>> messages from the place recognition node which are emitted only when the current image exceeds some similarity threshold with respect to previously seen images.  The message contains a short list of the republished IDs of the matching frames.  

Typically matches occur sporadically but often in groups, and the computational requirement is relatively intense, therefore we parse the message and initiate a new thread to handle the task of requesting the relevant rectified images for each match from the server and carrying out the geometric validation calculation.  On successful validation, the thread then generates an <<MsgLink(slam_backend/AddLoopClosure)>> message which is sent to the SLAM backend for insertion into the graph.

Geometric validation is carried out using the libviso2 library for visual odometry.  We perform a single visual odometry step from the recently received frame to all candidate frames.  The odometry returned is in the coordinate frame of the left camera, so we then transform it to the robot base frame and do a sanity check on the transform returned, if the translation/rotation exceeds threshold limits we discard the match.

Note that there is some inefficiency in this approach which we tolerate for modularity.  If we are using OpenFabMap for 
place recognition that node holds the SURF features for all images and the geometric verification node uses `libviso2` to
recompute features.  However in the case of the template matching place recogniser, does not compute image features, there
is no unnecessary computation.

-->

-->


*/
